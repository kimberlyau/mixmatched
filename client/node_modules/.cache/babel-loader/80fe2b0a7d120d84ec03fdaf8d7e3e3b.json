{"ast":null,"code":"var _jsxFileName = \"/Users/kimau/Desktop/git/mixmatched/client/src/context/musicEvent/MusicEventState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport { v4 } from 'uuid';\nimport MusicEventContext from './musicEventContext';\nimport musicEventReducer from './musicEventReducer';\nimport { ADD_EVENT, DELETE_EVENT, GET_EVENT } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MusicEventState = props => {\n  _s();\n\n  const initialState = {\n    events: [{\n      name: 'Lollapalooza',\n      cost: 400,\n      artists: []\n    }, {\n      name: 'EDC',\n      cost: 200,\n      artists: []\n    }, {\n      name: 'HARD Summer',\n      cost: 100,\n      artists: []\n    }]\n  };\n  const [state, dispatch] = useReducer(musicEventReducer, initialState); // Get Single Event\n\n  const getEvent = async username => {\n    setLoading(); // Call MongoDB\n    // const res = await axios.get(\n    //     `https://api.github.com/users/${username}?client_id=${githubClientId}&client_secret=${githubClientSecret}`\n    // );\n\n    dispatch({\n      type: GET_EVENT,\n      payload: res.data\n    });\n  }; // Add Music Event\n\n\n  const addMusicEvent = event => {\n    event.id = v4();\n    dispatch({\n      type: ADD_EVENT,\n      payload: event\n    });\n  }; // Delete Music Event\n\n\n  return /*#__PURE__*/_jsxDEV(MusicEventContext.Provider, {\n    value: {\n      events: state.events,\n      addMusicEvent\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MusicEventState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = MusicEventState;\nexport default MusicEventState;\n\nvar _c;\n\n$RefreshReg$(_c, \"MusicEventState\");","map":{"version":3,"sources":["/Users/kimau/Desktop/git/mixmatched/client/src/context/musicEvent/MusicEventState.js"],"names":["React","useReducer","v4","MusicEventContext","musicEventReducer","ADD_EVENT","DELETE_EVENT","GET_EVENT","MusicEventState","props","initialState","events","name","cost","artists","state","dispatch","getEvent","username","setLoading","type","payload","res","data","addMusicEvent","event","id","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,EAAT,QAAmB,MAAnB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AAEA,SAASC,SAAT,EAAoBC,YAApB,EAAkCC,SAAlC,QAAmD,UAAnD;;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAAA;;AAC/B,QAAMC,YAAY,GAAG;AACjBC,IAAAA,MAAM,EAAE,CACJ;AACIC,MAAAA,IAAI,EAAE,cADV;AAEIC,MAAAA,IAAI,EAAE,GAFV;AAGIC,MAAAA,OAAO,EAAE;AAHb,KADI,EAMJ;AACIF,MAAAA,IAAI,EAAE,KADV;AAEIC,MAAAA,IAAI,EAAE,GAFV;AAGIC,MAAAA,OAAO,EAAE;AAHb,KANI,EAWJ;AACIF,MAAAA,IAAI,EAAE,aADV;AAEIC,MAAAA,IAAI,EAAE,GAFV;AAGIC,MAAAA,OAAO,EAAE;AAHb,KAXI;AADS,GAArB;AAoBA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,UAAU,CAACG,iBAAD,EAAoBM,YAApB,CAApC,CArB+B,CAuB/B;;AACA,QAAMO,QAAQ,GAAG,MAAOC,QAAP,IAAoB;AACjCC,IAAAA,UAAU,GADuB,CAGjC;AACA;AACA;AACA;;AAEAH,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEb,SADD;AAELc,MAAAA,OAAO,EAAEC,GAAG,CAACC;AAFR,KAAD,CAAR;AAIH,GAZD,CAxB+B,CAsC/B;;;AACA,QAAMC,aAAa,GAAIC,KAAD,IAAW;AAC7BA,IAAAA,KAAK,CAACC,EAAN,GAAWxB,EAAE,EAAb;AACAc,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAEf,SAAR;AAAmBgB,MAAAA,OAAO,EAAEI;AAA5B,KAAD,CAAR;AACH,GAHD,CAvC+B,CA4C/B;;;AAEA,sBACI,QAAC,iBAAD,CAAmB,QAAnB;AACI,IAAA,KAAK,EAAE;AACHd,MAAAA,MAAM,EAAEI,KAAK,CAACJ,MADX;AAEHa,MAAAA;AAFG,KADX;AAAA,cAMKf,KAAK,CAACkB;AANX;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAxDD;;GAAMnB,e;;KAAAA,e;AA0DN,eAAeA,eAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport { v4 } from 'uuid';\nimport MusicEventContext from './musicEventContext';\nimport musicEventReducer from './musicEventReducer';\n\nimport { ADD_EVENT, DELETE_EVENT, GET_EVENT } from '../types';\n\nconst MusicEventState = (props) => {\n    const initialState = {\n        events: [\n            {\n                name: 'Lollapalooza',\n                cost: 400,\n                artists: [],\n            },\n            {\n                name: 'EDC',\n                cost: 200,\n                artists: [],\n            },\n            {\n                name: 'HARD Summer',\n                cost: 100,\n                artists: [],\n            },\n        ],\n    };\n\n    const [state, dispatch] = useReducer(musicEventReducer, initialState);\n\n    // Get Single Event\n    const getEvent = async (username) => {\n        setLoading();\n\n        // Call MongoDB\n        // const res = await axios.get(\n        //     `https://api.github.com/users/${username}?client_id=${githubClientId}&client_secret=${githubClientSecret}`\n        // );\n\n        dispatch({\n            type: GET_EVENT,\n            payload: res.data,\n        });\n    };\n\n    // Add Music Event\n    const addMusicEvent = (event) => {\n        event.id = v4();\n        dispatch({ type: ADD_EVENT, payload: event });\n    };\n\n    // Delete Music Event\n\n    return (\n        <MusicEventContext.Provider\n            value={{\n                events: state.events,\n                addMusicEvent,\n            }}\n        >\n            {props.children}\n        </MusicEventContext.Provider>\n    );\n};\n\nexport default MusicEventState;\n"]},"metadata":{},"sourceType":"module"}