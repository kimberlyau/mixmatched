{"ast":null,"code":"var _jsxFileName = \"/Users/kimau/Desktop/git/mixmatched/client/src/context/auth/AuthState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport AuthContext from './authContext';\nimport authReducer from './authReducer';\nimport setAuthToken from '../../utils/setAuthToken';\nimport axios from 'axios';\nimport { USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthState = props => {\n  _s();\n\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    user: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(authReducer, initialState); // Load User\n\n  const loadUser = async () => {\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n\n    try {\n      const res = await axios.get('/api/auth'); // res.data: valid user data\n\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      });\n    } catch (error) {\n      dispatch({\n        type: AUTH_ERROR\n      });\n    }\n  }; // Login User\n\n\n  const login = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('api/auth', formData, config);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      });\n      loadUser();\n    } catch (error) {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: error.response.data.msg\n      });\n    }\n  }; // Logout - destroy token\n  // Clear Errors\n\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      loading: state.loading,\n      user: state.user,\n      error: state.error,\n      loadUser,\n      login\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = AuthState;\nexport default AuthState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthState\");","map":{"version":3,"sources":["/Users/kimau/Desktop/git/mixmatched/client/src/context/auth/AuthState.js"],"names":["React","useReducer","AuthContext","authReducer","setAuthToken","axios","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","AuthState","props","initialState","token","localStorage","getItem","isAuthenticated","loading","user","error","state","dispatch","loadUser","res","get","type","payload","data","login","formData","config","headers","post","response","msg","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SACIC,WADJ,EAEIC,UAFJ,EAGIC,aAHJ,EAIIC,UAJJ,EAKIC,MALJ,EAMIC,YANJ,QAOO,UAPP;;;AASA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAMC,YAAY,GAAG;AACjBC,IAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADU;AAEjBC,IAAAA,eAAe,EAAE,IAFA;AAGjBC,IAAAA,OAAO,EAAE,IAHQ;AAIjBC,IAAAA,IAAI,EAAE,IAJW;AAKjBC,IAAAA,KAAK,EAAE;AALU,GAArB;AAQA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBtB,UAAU,CAACE,WAAD,EAAcW,YAAd,CAApC,CATyB,CAWzB;;AACA,QAAMU,QAAQ,GAAG,YAAY;AACzB,QAAIR,YAAY,CAACD,KAAjB,EAAwB;AACpBX,MAAAA,YAAY,CAACY,YAAY,CAACD,KAAd,CAAZ;AACH;;AAED,QAAI;AACA,YAAMU,GAAG,GAAG,MAAMpB,KAAK,CAACqB,GAAN,CAAU,WAAV,CAAlB,CADA,CAGA;;AACAH,MAAAA,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAErB,WAAR;AAAqBsB,QAAAA,OAAO,EAAEH,GAAG,CAACI;AAAlC,OAAD,CAAR;AACH,KALD,CAKE,OAAOR,KAAP,EAAc;AACZE,MAAAA,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAEpB;AAAR,OAAD,CAAR;AACH;AACJ,GAbD,CAZyB,CA2BzB;;;AACA,QAAMuB,KAAK,GAAG,MAAOC,QAAP,IAAoB;AAC9B,UAAMC,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADE,KAAf;;AAMA,QAAI;AACA,YAAMR,GAAG,GAAG,MAAMpB,KAAK,CAAC6B,IAAN,CAAW,UAAX,EAAuBH,QAAvB,EAAiCC,MAAjC,CAAlB;AAEAT,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAEnB,aADD;AAELoB,QAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,OAAD,CAAR;AAKAL,MAAAA,QAAQ;AACX,KATD,CASE,OAAOH,KAAP,EAAc;AACZE,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAElB,UADD;AAELmB,QAAAA,OAAO,EAAEP,KAAK,CAACc,QAAN,CAAeN,IAAf,CAAoBO;AAFxB,OAAD,CAAR;AAIH;AACJ,GAtBD,CA5ByB,CAoDzB;AAEA;;;AAEA,sBACI,QAAC,WAAD,CAAa,QAAb;AACI,IAAA,KAAK,EAAE;AACHrB,MAAAA,KAAK,EAAEO,KAAK,CAACP,KADV;AAEHG,MAAAA,eAAe,EAAEI,KAAK,CAACJ,eAFpB;AAGHC,MAAAA,OAAO,EAAEG,KAAK,CAACH,OAHZ;AAIHC,MAAAA,IAAI,EAAEE,KAAK,CAACF,IAJT;AAKHC,MAAAA,KAAK,EAAEC,KAAK,CAACD,KALV;AAMHG,MAAAA,QANG;AAOHM,MAAAA;AAPG,KADX;AAAA,cAWKjB,KAAK,CAACwB;AAXX;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CAvED;;GAAMzB,S;;KAAAA,S;AAyEN,eAAeA,SAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport AuthContext from './authContext';\nimport authReducer from './authReducer';\nimport setAuthToken from '../../utils/setAuthToken';\n\nimport axios from 'axios';\n\nimport {\n    USER_LOADED,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT,\n    CLEAR_ERRORS,\n} from '../types';\n\nconst AuthState = (props) => {\n    const initialState = {\n        token: localStorage.getItem('token'),\n        isAuthenticated: null,\n        loading: true,\n        user: null,\n        error: null,\n    };\n\n    const [state, dispatch] = useReducer(authReducer, initialState);\n\n    // Load User\n    const loadUser = async () => {\n        if (localStorage.token) {\n            setAuthToken(localStorage.token);\n        }\n\n        try {\n            const res = await axios.get('/api/auth');\n\n            // res.data: valid user data\n            dispatch({ type: USER_LOADED, payload: res.data });\n        } catch (error) {\n            dispatch({ type: AUTH_ERROR });\n        }\n    };\n\n    // Login User\n    const login = async (formData) => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n\n        try {\n            const res = await axios.post('api/auth', formData, config);\n\n            dispatch({\n                type: LOGIN_SUCCESS,\n                payload: res.data,\n            });\n\n            loadUser();\n        } catch (error) {\n            dispatch({\n                type: LOGIN_FAIL,\n                payload: error.response.data.msg,\n            });\n        }\n    };\n\n    // Logout - destroy token\n\n    // Clear Errors\n\n    return (\n        <AuthContext.Provider\n            value={{\n                token: state.token,\n                isAuthenticated: state.isAuthenticated,\n                loading: state.loading,\n                user: state.user,\n                error: state.error,\n                loadUser,\n                login,\n            }}\n        >\n            {props.children}\n        </AuthContext.Provider>\n    );\n};\n\nexport default AuthState;\n"]},"metadata":{},"sourceType":"module"}