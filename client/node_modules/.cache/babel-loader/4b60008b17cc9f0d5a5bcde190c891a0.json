{"ast":null,"code":"var _jsxFileName = \"/Users/kimau/Desktop/git/mixmatched/client/src/components/create.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Create() {\n  _s();\n\n  const [form, setForm] = useState({\n    name: '',\n    position: '',\n    level: ''\n  });\n  const navigate = useNavigate(); // These methods will update the state properties.\n\n  function updateForm(value) {\n    return setForm(prev => {\n      return { ...prev,\n        ...value\n      };\n    });\n  } // This function will handle the submission.\n\n\n  async function onSubmit(e) {\n    e.preventDefault(); // When a post request is sent to the create url, we'll add a new record to the database.\n\n    const newPerson = { ...form\n    };\n    await fetch('http://localhost:3000/record/add', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newPerson)\n    }).catch(error => {\n      window.alert(error);\n      return;\n    });\n    setForm({\n      name: '',\n      position: '',\n      level: ''\n    });\n    navigate('/');\n  } // This following section will display the form that takes the input from the user.\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create New Record\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"name\",\n          value: form.name,\n          onChange: e => updateForm({\n            name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"position\",\n          children: \"Position\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"position\",\n          value: form.position,\n          onChange: e => updateForm({\n            position: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check form-check-inline\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"radio\",\n            name: \"positionOptions\",\n            id: \"positionIntern\",\n            value: \"Intern\",\n            checked: form.level === 'Intern',\n            onChange: e => updateForm({\n              level: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"positionIntern\",\n            className: \"form-check-label\",\n            children: \"Intern\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check form-check-inline\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"radio\",\n            name: \"positionOptions\",\n            id: \"positionJunior\",\n            value: \"Junior\",\n            checked: form.level === 'Junior',\n            onChange: e => updateForm({\n              level: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"positionJunior\",\n            className: \"form-check-label\",\n            children: \"Junior\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check form-check-inline\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"radio\",\n            name: \"positionOptions\",\n            id: \"positionSenior\",\n            value: \"Senior\",\n            checked: form.level === 'Senior',\n            onChange: e => updateForm({\n              level: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"positionSenior\",\n            className: \"form-check-label\",\n            children: \"Senior\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Create person\",\n          className: \"btn btn-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Create, \"p0u6uVBU/51MAM3mAxk9tKqX1Dg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["/Users/kimau/Desktop/git/mixmatched/client/src/components/create.js"],"names":["React","useState","useNavigate","Create","form","setForm","name","position","level","navigate","updateForm","value","prev","onSubmit","e","preventDefault","newPerson","fetch","method","headers","body","JSON","stringify","catch","error","window","alert","target"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router';\n\nexport default function Create() {\n    const [form, setForm] = useState({\n        name: '',\n        position: '',\n        level: '',\n    });\n    const navigate = useNavigate();\n\n    // These methods will update the state properties.\n    function updateForm(value) {\n        return setForm((prev) => {\n            return { ...prev, ...value };\n        });\n    }\n\n    // This function will handle the submission.\n    async function onSubmit(e) {\n        e.preventDefault();\n\n        // When a post request is sent to the create url, we'll add a new record to the database.\n        const newPerson = { ...form };\n\n        await fetch('http://localhost:3000/record/add', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(newPerson),\n        }).catch((error) => {\n            window.alert(error);\n            return;\n        });\n\n        setForm({ name: '', position: '', level: '' });\n        navigate('/');\n    }\n\n    // This following section will display the form that takes the input from the user.\n    return (\n        <div>\n            <h3>Create New Record</h3>\n            <form onSubmit={onSubmit}>\n                <div className='form-group'>\n                    <label htmlFor='name'>Name</label>\n                    <input\n                        type='text'\n                        className='form-control'\n                        id='name'\n                        value={form.name}\n                        onChange={(e) => updateForm({ name: e.target.value })}\n                    />\n                </div>\n                <div className='form-group'>\n                    <label htmlFor='position'>Position</label>\n                    <input\n                        type='text'\n                        className='form-control'\n                        id='position'\n                        value={form.position}\n                        onChange={(e) =>\n                            updateForm({ position: e.target.value })\n                        }\n                    />\n                </div>\n                <div className='form-group'>\n                    <div className='form-check form-check-inline'>\n                        <input\n                            className='form-check-input'\n                            type='radio'\n                            name='positionOptions'\n                            id='positionIntern'\n                            value='Intern'\n                            checked={form.level === 'Intern'}\n                            onChange={(e) =>\n                                updateForm({ level: e.target.value })\n                            }\n                        />\n                        <label\n                            htmlFor='positionIntern'\n                            className='form-check-label'\n                        >\n                            Intern\n                        </label>\n                    </div>\n                    <div className='form-check form-check-inline'>\n                        <input\n                            className='form-check-input'\n                            type='radio'\n                            name='positionOptions'\n                            id='positionJunior'\n                            value='Junior'\n                            checked={form.level === 'Junior'}\n                            onChange={(e) =>\n                                updateForm({ level: e.target.value })\n                            }\n                        />\n                        <label\n                            htmlFor='positionJunior'\n                            className='form-check-label'\n                        >\n                            Junior\n                        </label>\n                    </div>\n                    <div className='form-check form-check-inline'>\n                        <input\n                            className='form-check-input'\n                            type='radio'\n                            name='positionOptions'\n                            id='positionSenior'\n                            value='Senior'\n                            checked={form.level === 'Senior'}\n                            onChange={(e) =>\n                                updateForm({ level: e.target.value })\n                            }\n                        />\n                        <label\n                            htmlFor='positionSenior'\n                            className='form-check-label'\n                        >\n                            Senior\n                        </label>\n                    </div>\n                </div>\n                <div className='form-group'>\n                    <input\n                        type='submit'\n                        value='Create person'\n                        className='btn btn-primary'\n                    />\n                </div>\n            </form>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}